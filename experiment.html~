<!doctype html>
<html>

<head>
<meta charset = 'utf-8'>
<title>Hindi Lexical Decision Task</title>  
<!-- Changed for JATOS: Added study assets path -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
  <script src="/study_assets/lexical_decision/jspsych-5.0.3/jspsych.js"></script>
  <script src="/study_assets/lexical_decision/jspsych-5.0.3/plugins/jspsych-instructions.js"></script>
  <script src="/study_assets/lexical_decision/jspsych-5.0.3/plugins/jspsych-single-stim.js"></script>
  <script src="/study_assets/lexical_decision/jspsych-5.0.3/plugins/jspsych-text.js"></script>
  <script src="/assets/javascripts/jatos.js"></script>
  <link href="/study_assets/lexical_decision/jspsych-5.0.3/css/jspsych.css" rel="stylesheet"></link>
<style>
p {class: "center-content";},
.stimulus { font-size: 60px; }   
</style>
</head>
<body>
  <div id="jspsych-target"></div>
</body>
<script>
  /* experiment parameters */
  /* JATOS: Those parameters could be put into component's properties / JSON input */
var max_response_time = 2500;
var post_trial_gap = 1600;

var high_frequency_words = ['सेना', 'घर', 'मंत्री', 'महीना', 'मंदिर','हाथ','केंद्र','रंग','घंटा','नदी'];
    
var low_frequency_words = ['दाल', 'शीशा', 'अंगूठी', 'दांत', 'रेत', 'चोर','साँप','बर्तन','टोपी','धूल','बगीचा','मसाला','चाँद','नाक','कुर्सी','सफ़ेद','डिब्बा','तंबाकू','मच्छर','गोल','नींद','जूता','तारीख','तलवार','कमल','दोस्ती','गाय','कपड़े','जहाज','रथ','सड़क','जाल','धुन','शून्य','राह','जूता','तूफान','जंग','चमक','पत्ती'];

var nonwords = ['फर', 'कौला', 'दानू', 'खोमा', 'तिशात', 'नाखा', 'मंतला', 'मालतो', 'मिडली','बोसना','जोमल','हितो','मोब्बा','यामना','लल', 'बैस', 'मुराब', 'शोनाम','फुरसा','गुयामो','तलाम','तसरुफ','नियिमा','चानू','डाबो','तरमा','बारमा','धूरली','वोम','ग्रकर','होस्सा','गस','लांडिल','बूला','वोशिमा','हाक्रा','नुलटी','पिनुया','तारिस','गिनटा','नुमनी','गस्य','भोट्टी','चेरया','केटा','नासो','सूपा','भीर','ताड','द्राडा','यीन','लार','गोरदी','छोल']; 

//var low_frequency_words = ['धागा'];
//var high_frequency_words = ['शाकाहारी', 'राम'];
//var nonwords = ['यीन', 'विस्तारकपूर्व'];


// generate a random subject ID
var subject_id = Math.floor(Math.random()*100000);

// pick a random condition for the subject at the start of the experiment
var condition_assignment = jsPsych.randomization.sample(['conditionA', 'conditionB', 'conditionC'],1)[0];

// record the condition assignment in the jsPsych data
// this adds a property called 'subject' and a property called 'condition' to every trial
jsPsych.data.addProperties({
  subject: subject_id,
  condition: condition_assignment
});


/* create experiment timeline array */
var timeline = [];

/* define welcome message block */
var welcome_block = {
type: "text",
text: ["<p class='center-content'><u> <strong>Hindi Experiment</strong></u></p>" +
"<div class='center-content'><img src='/study_assets/lexical_decision/img/welcome1.jpg'></img>" +
"<p class='small'><strong>Press any key to begin</strong></p></div>"

],
timing_post_trial: 1000,
};


timeline.push(welcome_block);

  /*
    this demo will only work if run online or with special permissions enable offline
    for chrome, launch the browser from the command-line:
    chrome --allow-file-access-from-files
    */
/*
var check_consent = function(elem) {
if ($('#consent_checkbox').is(':checked')) {
return true;
} else {
alert("If you wish to participate, you must check the box next to the statement 'I agree to participate in this study.'");
return false;
}
return false;
};

var consent_block = {
"type": "html",
"force_refresh": true,
"url": "jspsych-5.0.3/tests&examples/external_html/lang_consent.html",
"cont_btn": "start",
"check_fn": check_consent
}

/*timeline.push(consent_block);*/


/* instructions */
  var instructions = {
    type: 'instructions',
    pages: ['<p style="font-weight:bold;"> Informed consent </p>' + '<p> I hereby acknowledge that I agree to participate in an empirical study on language processing. I have been informed about the planned study in writing, and that I have understood the content of this information, have no issues with recording of data during the planned experiment; I also have no issues with this data being used anonymously for future research purposes. My participation in this study is voluntary. I know that I can at any time cancel my participation from the study without any difficulty. I am aware that I can withdraw this consent at any time.</p>' + '<p> If you wish to participate, you must CLICK next button in order to agree to participate in this study. </p>'
    ],
    allow_keys: false,
    show_clickable_nav: true
  
  }

timeline.push(instructions);


/* instructions */
  var instructions = {
    type: 'instructions',
    pages: ['<p> PLEASE READ THE INSTRUCTIONS CAREFULLY.</p>' +
        '<p>You are going to see a series of individual words, some of which are' +
      ' actual Hindi words, while others are nonsense words that look like ' +
      'Hindi words. Your job is to indicate whether the word is a real Hindi ' +
      'word as quickly and accurately as you can.</p>' +
      '<p>In case of no response, you will see the next word automatically.</p> ' +        
      '<p>Try not to say the word aloud as you read. </p>' +          
      '<p class="center-content" style="font-weight:bold;">Press A if the word is a Hindi word.</p>' +
      '<p class="center-content" style="font-weight:bold;">Press L if the word is a non-Hindi word.</p>',
      '<p>For example:</p>' +
      "<div class='left center-content'><img src='/study_assets/lexical_decision/img/word.png'></img>" +
      "<p class='small'><strong>Hindi Word: Press the A key</strong></p></div>" +
      "<div class='right center-content'><img src='/study_assets/lexical_decision/img/nonword.png'></img>" +
      "<p class='small'><strong>Non-Hindi Word: Press the L key</strong></p></div>",
    "<p class='center-content'><u> <strong>Ready?</strong></u></p>" +
"<p class='center-content'>The experiment will begin now. You will not be able to take a break from your seat.</p></div>" +
"<p class='center-content'>Place your hands on the 'a' and 'l' keys to make the response easier.</p></div>" +
"<p class='center-content'><strong>If you are ready, click 'Next' to begin, or review the instructions on previous pages.</strong></p></div>"
        
    ],
    allow_keys: false,
    show_clickable_nav: true
  }

timeline.push(instructions);
 

    
/* create test trials */

  var low_frequency_trials = [];
  for (var i in low_frequency_words) {
    low_frequency_trials.push({
      type: 'single-stim',
      stimulus: '<div style="top: 40%; left: 40%; position: absolute;"><div style="font-size:128px;">' + low_frequency_words[i] + '</div></div>',
      timing_response: max_response_time,
      timing_post_trial: post_trial_gap,
      choices: ['a', 'l'],
      is_html: true,
      data: {
        word_type: 'low'
      }
    });
  }

  var high_frequency_trials = [];
  for (var i in high_frequency_words) {
    high_frequency_trials.push({
      type: 'single-stim',
      stimulus: '<div style="top: 40%; left: 40%; position: absolute;"><div style="font-size:128px;">' + high_frequency_words[i] + '</div></div>',
      timing_response: max_response_time,
      timing_post_trial: post_trial_gap,
      choices: ['a', 'l'],
      is_html: true,
      data: {
      word_type: 'high'
      }
    });
  }

  var nonword_trials = [];
  for (var i in nonwords) {
    nonword_trials.push({
      type: 'single-stim',
      stimulus: '<div style="top: 40%; left: 40%; position: absolute;"><div style="font-size:128px;">' + nonwords[i] + '</div></div>',
      timing_response: max_response_time,
      timing_post_trial: post_trial_gap,
      choices: ['a', 'l'],
      is_html: true,
      data: {
      word_type: 'nonword'
      }
    });
  }

  var all_trials = low_frequency_trials.concat(high_frequency_trials, nonword_trials);
  all_trials = jsPsych.randomization.shuffle(all_trials);

  timeline = timeline.concat(all_trials);

  /* show summary data */

  function compute_mean_RTs(data) {
    var response_times = {
      low: [],
      high: [],
      nonword: []
    }
    var correct_responses = 0;
    var total_responses = 0;
    for (var i in data) {
      if (data[i].trial_type === "single-stim") {
        total_responses++;
        var correct = false;
        if (data[i].word_type == 'nonword') {
          correct = (data[i].key_press == 76)
        } else {
          correct = (data[i].key_press == 65)
        }
        if (correct) {
          correct_responses++;
        }
        response_times[data[i].word_type].push(data[i].rt);
      }
    }

    response_times.low = mean(response_times.low);
    response_times.high = mean(response_times.high);
    response_times.nonword = mean(response_times.nonword);
    response_times.accuracy = Math.ceil(correct_responses / total_responses * 100);

    return response_times;
  }

  function mean(arr) {
    var sum = 0;
    for (i in arr) {
      sum += arr[i]
    }
    return sum / arr.length;
  }

  var show_data_trial = {
    type: 'text',
    choices: 'none',
    text: function() {
      var rt_data = compute_mean_RTs(jsPsych.data.getData());
      var message = "<p class='center-content'>Yay! Congratulations. You completed the DEMO experiment! </p>" + 
       "<p class='center-content' style='font-weight:bold;'> You responded correctly on " + rt_data.accuracy + "% of the trials. </p>" +
//        "<p class='center-content'>Your average response time for " + "high frequency Hindi words was " + Math.floor(rt_data.high) + "ms.</p>" +
//        "<p class='center-content'>Your average response time for low frequency Hindi words was " + Math.floor(rt_data.low) + "ms.</p>" + 
//        "<p class='center-content'>Your average response time for non-Hindi words " + " was " + Math.floor(rt_data.nonword) + "ms.</p><br>" +
        "<p class='center-content' style='font-weight:bold;'> Please press any KEY to exit the experiment. </p><br>"+
        "<div class='center-content'><img src='/study_assets/lexical_decision/img/thankyou.png'></img>";
      return message;
    }
  }

  timeline.push(show_data_trial);


  /* start the experiment */
  /* Changed for JATOS: wrapped jsPsych.init with jatos.onLoad */
  
  jatos.onLoad(function() {
    jsPsych.init({
      display_element: $('#jspsych-target'),
      fullscreen: true,
      timeline: timeline,
      on_finish: function() {
        /* Changed for JATOS: submit result data to JATOS and start next component */
        var resultJson = JSON.stringify(jsPsych.data.getData());
        jatos.submitResultData(resultJson, jatos.startNextComponent);
      }
    });
  });
</script>

</html>
